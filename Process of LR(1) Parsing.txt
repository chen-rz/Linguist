Process of LR(1) Parsing
====================================================================================================
Terminals:
                             a                   b                   c                   d          
         e          
====================================================================================================
Non-terminals:
         A                 START               START'       
====================================================================================================
Closures of Item Sets:
  0              START' =>  · START, #                              START =>  · a A d, #               
                  START =>  · b A c, #                              START =>  · a e c, #               
                  START =>  · b e d, #               
  1               START => b · A c, #                               START => b · e d, #                
                      A =>  · e, c                   
  2               START => b e · d, #                                   A => e · , c                   
   
  3               START => a · A d, #                               START => a · e c, #                
                      A =>  · e, d                   
  4               START => a e · c, #                                   A => e · , d                   
   
  5               START => b A · c, #                
  6               START => a A · d, #                
  7               START => b e d · , #               
  8               START => a A d · , #               
  9              START' => START · , #               
 10               START => a e c · , #               
 11               START => b A c · , #               

====================================================================================================
GO Functions:
    (0, 'START') => 9          (0, 'a') => 3            (0, 'b') => 1            (1, 'A') => 5      
      (1, 'e') => 2            (2, 'd') => 7            (3, 'A') => 6            (3, 'e') => 4      
      (4, 'c') => 10           (5, 'c') => 11           (6, 'd') => 8      
====================================================================================================
